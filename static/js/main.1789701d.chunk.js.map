{"version":3,"sources":["features/AppSettings.module.css","features/timerSlice.js","constants.js","helpers.js","features/AppSettings.js","features/Timer.js","App.js","app/store.js","index.js","features/Timer.module.css"],"names":["module","exports","timerSlice","createSlice","name","initialState","breakLength","inSession","sessionLength","reducers","decrementBreak","state","incrementBreak","decrementSession","incrementSession","switchMode","actions","getTimerSeconds","ms","Math","floor","slice","getTimerMinutes","AppSettings","dispatch","useDispatch","useSelector","className","styles","onClick","Timer","props","currentTime","paused","timerId","this","beginBreak","bind","beginSession","changeMode","clearTimer","togglePause","_","prevState","setState","timerMinutes","timerSeconds","timeOut","document","title","clearInterval","setInterval","key","handleTimer","resetTimer","skip","React","Component","connect","App","store","configureStore","reducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1789701d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"AppSettings_settings__1S7gO\",\"session\":\"AppSettings_session__3au8v\",\"break\":\"AppSettings_break__3OxBY\",\"time\":\"AppSettings_time__30Le4\"};","import {\r\n  DEFAULT_BREAK,\r\n  DEFAULT_SESSION,\r\n  MINUTE_MS,\r\n} from '../constants'\r\n\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const timerSlice = createSlice({\r\n  name: 'timer',\r\n  initialState: {\r\n    breakLength: DEFAULT_BREAK,\r\n    inSession: true,\r\n    sessionLength: DEFAULT_SESSION,\r\n  },\r\n  reducers: {\r\n    decrementBreak(state) {\r\n      state['breakLength'] -= MINUTE_MS\r\n    },\r\n    incrementBreak(state) {\r\n      state['breakLength'] += MINUTE_MS\r\n    },\r\n    decrementSession(state) {\r\n      state['sessionLength'] -= MINUTE_MS\r\n    },\r\n    incrementSession(state) {\r\n      state['sessionLength'] += MINUTE_MS\r\n    },\r\n    switchMode(state) {\r\n      state['inSession'] = !state['inSession']\r\n    },\r\n  }\r\n})\r\n\r\nexport const {\r\n  decrementBreak,\r\n  incrementBreak,\r\n  decrementSession,\r\n  incrementSession,\r\n  switchMode,\r\n} = timerSlice.actions\r\n\r\nexport default timerSlice.reducer","// time intervals (ms)\r\nexport const DEFAULT_SESSION = 1500000\r\nexport const DEFAULT_BREAK = 300000\r\nexport const MINUTE_MS = 60000\r\nexport const SECOND_MS = 1000\r\nexport const MINUTE_S = 60\r\n\r\n// for consistency's sake\r\nexport const UP = true\r\nexport const DOWN = false","import {\r\n  MINUTE_MS,\r\n  MINUTE_S,\r\n  SECOND_MS,\r\n} from './constants'\r\n\r\nexport function getTimerSeconds(ms) {\r\n  const seconds = Math.floor(ms / SECOND_MS) % MINUTE_S\r\n\r\n  return (\r\n    ('0' + seconds).slice(-2)\r\n  );\r\n}\r\n\r\nexport function getTimerMinutes(ms) {\r\n  const minutes = Math.floor(ms / MINUTE_MS) % MINUTE_S\r\n  \r\n  return (\r\n    ('0' + minutes).slice(-2)\r\n  );\r\n}","import {\r\n  decrementBreak,\r\n  decrementSession,\r\n  incrementBreak,\r\n  incrementSession,\r\n} from './timerSlice'\r\nimport {\r\n  useDispatch,\r\n  useSelector,\r\n} from 'react-redux'\r\n\r\nimport React from 'react'\r\nimport { getTimerMinutes } from '../helpers'\r\nimport styles from './AppSettings.module.css'\r\n\r\nexport default function AppSettings() {\r\n  const dispatch = useDispatch()\r\n  \r\n  let breakLength = useSelector(state => state['breakLength'])\r\n  breakLength = getTimerMinutes(breakLength)\r\n  \r\n  let sessionLength = useSelector(state => state['sessionLength'])\r\n  sessionLength = getTimerMinutes(sessionLength)\r\n\r\n  return (\r\n    <div className={styles['settings']}>\r\n      <div className={styles['session']}>\r\n        <h3 className={styles['label']}>\r\n          session\r\n        </h3>\r\n        <button className={styles['up']} onClick={() => dispatch(incrementSession())}>\r\n          <i className=\"fas fa-caret-up fa-3x\"></i>\r\n        </button>\r\n        <h3 className={styles['time']}>\r\n          {sessionLength}\r\n        </h3>\r\n        <button className={styles['down']} onClick={() => dispatch(decrementSession())}>\r\n          <i className=\"fas fa-caret-down fa-3x\"></i>\r\n        </button>\r\n      </div>\r\n      <div className={styles['break']}>\r\n        <h3 className={styles['label']}>\r\n          break\r\n        </h3>\r\n        <button className={styles['up']} onClick={() => dispatch(incrementBreak())}>\r\n          <i className=\"fas fa-caret-up fa-3x\"></i>\r\n        </button>\r\n        <h3 className={styles['time']}>\r\n          {breakLength}\r\n        </h3>\r\n        <button className={styles['down']} onClick={() => dispatch(decrementBreak())}>\r\n          <i className=\"fas fa-caret-down fa-3x\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import {\r\n  getTimerMinutes,\r\n  getTimerSeconds,\r\n} from '../helpers'\r\n\r\nimport React from 'react'\r\nimport { SECOND_MS } from '../constants'\r\nimport { connect } from 'react-redux'\r\nimport styles from './Timer.module.css'\r\nimport { switchMode } from './timerSlice'\r\n\r\n/* eslint-disable no-useless-constructor */\r\n\r\nexport class Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    \r\n    this.state = {\r\n      currentTime: this.props.sessionLength,\r\n      paused: true,\r\n      timerId: null,\r\n      get timerMinutes() {\r\n        return getTimerMinutes(this.currentTime);\r\n      },\r\n      get timerSeconds() {\r\n        return getTimerSeconds(this.currentTime);\r\n      },\r\n    }\r\n    \r\n    this.beginBreak = this.beginBreak.bind(this)\r\n    this.beginSession = this.beginSession.bind(this)\r\n    this.changeMode = this.changeMode.bind(this)\r\n    this.clearTimer = this.clearTimer.bind(this)\r\n    this.togglePause = this.togglePause.bind(this)\r\n  }\r\n  \r\n  // lifecycle methods\r\n  componentDidUpdate(_, prevState) {\r\n    if (prevState['currentTime'] !== this.state['currentTime']) {\r\n      this.setState(state => {\r\n        return {\r\n          timerMinutes: getTimerMinutes(state.currentTime),\r\n          timerSeconds: getTimerSeconds(state.currentTime),\r\n        };\r\n      })\r\n    } else if (prevState['currentTime'] === 0) {\r\n      this.timeOut()\r\n    }\r\n    document.title = `${this.state.timerMinutes}:${this.state.timerSeconds}`\r\n  }\r\n  \r\n  // class methods\r\n  beginBreak() {\r\n    this.clearTimer()\r\n    this.setState((_, props) => {\r\n      return {\r\n        currentTime: props.breakLength,\r\n        paused: true,\r\n      };\r\n    })\r\n  }\r\n  \r\n  beginSession() {\r\n    this.clearTimer()\r\n    this.setState((_, props) => {\r\n      return {\r\n        currentTime: props.sessionLength,\r\n        paused: true,\r\n      };\r\n    })\r\n  }\r\n\r\n  changeMode() {\r\n    if (this.props.dispatch) {\r\n      this.props.dispatch(switchMode())\r\n    }\r\n  }\r\n\r\n  clearTimer() {\r\n    clearInterval(this.state.timerId)\r\n    this.setState(() => {\r\n      return { timerId: null };\r\n    })\r\n  }\r\n  \r\n  timeOut() {\r\n    this.props.inSession\r\n      ? this.beginBreak()\r\n      : this.beginSession()\r\n\r\n    this.changeMode()\r\n  }\r\n\r\n  handleTimer() {\r\n    if (this.state.paused) {\r\n      this.togglePause()\r\n      const timerId = setInterval(() => {\r\n        this.setState(state => {\r\n          return { currentTime: state.currentTime - SECOND_MS };\r\n        })\r\n      }, SECOND_MS)\r\n      this.setState(() => {\r\n        return { timerId };\r\n      })\r\n    } else {\r\n      this.togglePause()\r\n      this.clearTimer()\r\n    }\r\n  }\r\n\r\n  togglePause() {\r\n    this.setState(state => {\r\n      return { paused: !state.paused };\r\n    })\r\n  }\r\n\r\n  resetTimer() {\r\n    this.props.inSession\r\n      ? this.beginSession()\r\n      : this.beginBreak()\r\n  }\r\n\r\n  skip() {\r\n    if (this.props.inSession) {\r\n      this.changeMode()\r\n      this.setState((_, props) => {\r\n        return { currentTime: props.breakLength };\r\n      })\r\n      this.beginBreak()\r\n    } else {\r\n      this.changeMode()\r\n      this.setState((_, props) => {\r\n        return { currentTime: props.sessionLength };\r\n      })\r\n      this.beginSession()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles['timer']}>\r\n        <h2 className={styles['label']} key={this.props.inSession}>\r\n          {this.props.inSession ? 'session' : 'break'}\r\n        </h2>\r\n        <h1 className={styles['stopwatch']}>\r\n          {`${this.state.timerMinutes}:${this.state.timerSeconds}`}\r\n        </h1>\r\n        <div className={styles['button-group']}>\r\n          <button className={styles['pause']} onClick={this.handleTimer.bind(this)}>\r\n            <i className=\"fas fa-play fa-2x\"></i>\r\n          </button>\r\n          <button className={styles['reset']} onClick={this.resetTimer.bind(this)}>\r\n            <i className=\"fas fa-redo-alt fa-2x\"></i>\r\n          </button>\r\n          <button className={styles['skip']} onClick={this.skip.bind(this)}>\r\n            <i className=\"fas fa-forward fa-2x\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    breakLength: state['breakLength'],\r\n    inSession: state['inSession'],\r\n    sessionLength: state['sessionLength'],\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null,\r\n)(Timer)","import './App.css'\r\n\r\nimport AppSettings from './features/AppSettings'\r\nimport React from 'react'\r\nimport Timer from './features/Timer'\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <h1 className=\"page-title\">pomodoro timer</h1>\r\n      <Timer />\r\n      <AppSettings />\r\n    </div>\r\n  );\r\n}","import { configureStore } from '@reduxjs/toolkit'\r\nimport reducer from '../features/timerSlice'\r\n\r\nconst store = configureStore({\r\n  reducer: reducer\r\n})\r\n\r\nexport default store","import App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport store from './app/store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button-group\":\"Timer_button-group__1VQZ_\",\"stopwatch\":\"Timer_stopwatch__1NYKb\",\"timer\":\"Timer_timer__1HHrb\",\"label\":\"Timer_label__310Ee\"};"],"sourceRoot":""}